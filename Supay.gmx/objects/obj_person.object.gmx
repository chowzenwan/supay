<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
randomize();
dir = choose(-1, 1);
normal_spd = 2;
spd = 2;
hspd = 0;
vspd = 0;
grav = 3;
hp = 2;
image_speed = .4;
//Flee Variables
flee = false;
flee_spd = 10;
flee_sprite = spr_personflee;

//states
enum e_state
{
    idle,
    flee,
}

state = e_state.idle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collisions
hspd = dir * spd;
vspd += grav;

//Horizontal Collisions
if (place_meeting(x + hspd, y, obj_solid)) {
    while (!place_meeting(x + sign(hspd), y, obj_solid)) {
        x+=sign(hspd);
    }    
    hspd  = 0;
    
    //Flips Direction
    dir *= -1;
}

x += hspd;

//Vertical Collisions
if (place_meeting(x, y + vspd, obj_solid)) {
    while (!place_meeting(x, y + sign(vspd), obj_solid )) {
        y+= sign(vspd);
    }
    
    vspd = 0;
}

y += vspd;

//states
switch (state)
{
    case e_state.idle:
    {
        sprite_index = spr_personidle;
        spd = normal_spd;
        hspd = dir * spd;
        vspd = (min(7,vspd + 0.05));
        if (distance_to_object(obj_enemy) &lt; 50) state = e_state.flee;
    }
    break;
    case e_state.flee:
    {
        sprite_index = spr_personflee;
        dir = sign(obj_player.x - x);
        spd = flee_spd;
        hspd = (dir * spd) * -1;
        vspd = (min(7,vspd + 0.05));
        if (distance_to_object(obj_enemy) &gt; 150) state = e_state.idle;
    }
    break;
}

//close to another person
if (distance_to_object (obj_person) &lt; 20 )
    {
    spd = normal_spd + random(-2.2) 
    } 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scaling
if (dir = -1) image_xscale = 1;
else image_xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
///flee Mode
    x = obj_person.x;
    y = obj_person.y;
    flee = true;


if (flee == true) {
    spd = flee_spd;
    sprite_index = flee_sprite;
    flee = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
